name: CI

on:
    workflow_dispatch:
    pull_request:

env:
    NODE_VERSION: 20

jobs:
    lint:
        name: Lint
        runs-on: [om-vsm-runner]
        steps:
            - name: Checkout ${{ github.head_ref || github.ref_name }}
              uses: actions/checkout@v4

            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install Dependencies
              run: npm ci
              env:
                  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN}}

            - name: Run Lint
              run: npm run lint

    build:
        name: Build
        runs-on: [om-vsm-runner]
        steps:
            - name: Checkout ${{ github.head_ref || github.ref_name }}
              uses: actions/checkout@v4

            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install Dependencies
              run: npm ci
              env:
                  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN}}

            - name: Run Build
              run: npm run build

    test:
        name: Test
        runs-on: [om-vsm-runner]
        steps:
            - name: Checkout ${{ github.head_ref || github.ref_name }}
              uses: actions/checkout@v4

            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install Dependencies
              run: npm ci
              env:
                  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN}}

            - name: Run Unit Test
              run: npm run test:unit

    analysis-with-sonar:
        name: Analysis With Sonar
        runs-on: [om-vsm-runner]
        steps:
            - name: Checkout ${{ github.head_ref || github.ref_name }}
              uses: actions/checkout@v4

            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install Dependencies
              run: npm ci
              env:
                  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN}}

            - name: Run Test Coverage
              run: npm run test:cov

            - name: Get Branch Name
              id: branch_name
              run: |
                  if [ -z "${{ github.event.pull_request.number }}" ]; then
                    echo "GITHUB_BRANCH_NAME=${{ github.head_ref || github.ref_name}}" >> $GITHUB_OUTPUT
                  else
                    echo "GITHUB_BRANCH_NAME=" >> $GITHUB_OUTPUT
                   fi

            - name: Analyze with SonarCloud
              uses: sonarsource/sonarcloud-github-action@v2.3.0
              with:
                  args: >
                      -Dproject.settings=sonar.properties
                      -Dsonar.organization=${{github.repository_owner || github.event.organization }}
                      -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY || github.event.repository.name }}
                      -Dsonar.projectName=${{ secrets.SONAR_PROJECT_KEY || github.event.repository.name }}
                      -Dsonar.branch.name=${{ steps.branch_name.outputs.GITHUB_BRANCH_NAME}}
                      -Dsonar.sources=src 
                      -Dsonar.tests=test 
                      -Dsonar.exclusions=src/**/index.ts,src/**/types/*,**/*.spec.ts,**/*.spec.tsx,**/mock/*.ts,src/**/icons/*,src/**/constants/*,**/*.tsx,**/*.mock.ts,**/*.constant.ts
                      -Dsonar.test.exclusions=test/configs/**/* 
                      -Dsonar.coverage.exclusions=src/**/index.ts,src/**/types/*,**/*.spec.ts,**/*.spec.tsx,**/mock/*.ts,src/**/icons/*,src/**/constants/*,**/*.tsx,**/*.mock.ts,**/*.constant.ts
                      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
                      -Dsonar.javascript.exclusions=src/**/index.ts,src/**/types/*,**/*.spec.ts,**/*.spec.tsx,**/mock/*.ts,src/**/icons/*,src/**/constants/*,**/*.tsx,**/*.mock.ts,**/*.constant.ts
                      -Dsonar.login=${{ secrets.SONAR_CLOUD_TOKEN_OM }}
                      -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref || github.base_ref }}
                      -Dsonar.pullrequest.key=${{ github.event.pull_request.number || github.event.number }}
                      -Dsonar.pullrequest.branch=${{ github.head_ref || github.event.pull_request.head.ref }}
                      -Dsonar.pullrequest.provider=GitHub
                      -Dsonar.pullrequest.github.repository=${{ github.event.repository.name || github.repository }}
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN_OM }}
