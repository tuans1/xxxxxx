syntax = "proto3";

package chorus.mdm.location.v1;

import "chorus/mdm/base/v1/base.proto";

// The location information.
message Location {
  reserved 1 to 3;
  // The location_code is the code of the location. loc_cd in OPUS.
  string location_code = 4;
  // The location_name is the name of the location. loc_nm in OPUS.
  string location_name = 5;
  // The country_code is the country code of the location. cnt_cd in OPUS.
  string country_code = 6;
  // The state_code is the state code of the location. ste_cd in OPUS.
  string state_code = 7;
  // The gmt_hours is the GMT hours of the location. gmt_hrs in OPUS.
  int32 gmt_hours = 8;
  // The continent_code is the continent code of the location. conti_cd in OPUS.
  string continent_code = 9;
  // The delete flag. delt_flg in OPUS
  string delete_flag = 10;
  // The region_code is the region code of the location. rgn_cd in OPUS.
  string region_code = 11;
}

// The location search information.
message LocationSearch {
  // The location_code is the code of the location. loc_cd in OPUS.
  string location_code = 1;
  // The location_name is the name of the location. loc_nm in OPUS.
  string location_name = 2;
  // The region_code is the region code of the location. rgn_cd in OPUS.
  string region_code = 3;
  // The state_code is the state code of the location. ste_cd in OPUS.
  string state_code = 4;
  // The un_location_indicator_code is the un location indicator code of the location. un_loc_ind_cd in OPUS.
  string un_location_indicator_code = 5;
  // The scc_code is the scc code of the location. scc_cd in OPUS.
  string scc_code = 6;
  // The ecc_code is the ecc code of the location. ecc_cd in OPUS.
  string ecc_code = 7;
  // The lcc_code is the lcc code of the location. lcc_cd in OPUS.
  string lcc_code = 8;
  // The rcc_code is the rcc code of the location. rcc_cd in OPUS.
  string rcc_code = 9;
  // The sales_office_code is the sales office code of the location. sls_ofc_cd in OPUS.
  string sales_office_code = 10;
  // The finance_control_office_code is the finance control office code of the location. finc_ctrl_ofc_cd in OPUS.
  string finance_control_office_code = 11;
  // The equipment_control_office_code is the equipment control office code of the location. eq_ctrl_ofc_cd in OPUS.
  string equipment_control_office_code = 12;
  // The country_code is the country code of the location. cnt_cd in OPUS.
  string country_code = 13;
  // The un_location_code is the un location code of the location. un_loc_cd in OPUS.
  string un_location_code = 14;
  // The hub_location_code is the hub location code of the location. hub_loc_cd in OPUS.
  string hub_location_code = 15;
  // The total_row_count total records of the search request.
  int32 total_row_count = 16;
}

// The location code information.
message LocationCode {
  // The code of the location.
  string location_code = 1;
}

// The scc code information.
message SccCode {
  // The scc code
  string scc_code = 1;
}

// The scc code field information.
message SccCodeData {
  // The scc code
  repeated SccCode scc_code_list = 1;
}

// Request message for `LocationInfoService.GetLocationsByCodes`.
message GetLocationsByCodesRequest {
  // The location code list.
  repeated LocationCode location_code_list = 1;
}

// Response message for `LocationInfoService.GetLocationsByCodes`.
message GetLocationsByCodesResponse {
  // The location information.
  Location location = 1;
}

// Request message for `LocationInfoService.SearchLocationsByName`.
message SearchLocationsByNameRequest {
  // The name of the location.
  string location_name = 1;
}

// Response message for `LocationInfoService.SearchLocationsByName`.
message SearchLocationsByNameResponse {
  // The location information.
  Location location = 1;
}

// Request message for `LocationInfoService.SearchLocationsByMultipleFields`.
message SearchLocationsByMultipleFieldsRequest {
  // The code of the location.
  optional string location_code = 1;
  // The name of the location.
  optional string location_name = 2;
  // The scc code list.
  optional SccCodeData scc_code_data = 3;
  // The sales office code of the location.
  optional string sales_office_code = 4;
  // The finance control office code of the location.
  optional string finance_control_office_code = 5;
  // The equipment control office code of the location.
  optional string equipment_control_office_code = 6;
  // The un location indicator code of the location.
  optional string un_location_indicator_code = 7;
  // The state_code is the state code of the location.
  optional string state_code = 8;
  // The country_code is the country code of the location.
  optional string country_code = 9;
  // The delete flag
  optional string delt_flg = 10;
  // The call port flag
  optional string call_port_flag = 11;
  // The pagination info.
  chorus.mdm.base.v1.Pagination pagination = 12;
  // The order by list
  repeated chorus.mdm.base.v1.OrderBy order_by = 13;
}

// Response message for `LocationInfoService.SearchLocationsByMultipleFields`.
message SearchLocationsByMultipleFieldsResponse {
  // The location information.
  LocationSearch location = 1;
}

// Services for location.
service LocationInfoService {
  // Get list of locations by codes.
  //
  // Operation: MATCH
  //
  // Request:
  // {
  //     "location_code_list": [
  //         {
  //             "location_code": "DEGCI"
  //         }
  //     ]
  // }
  //
  // Response:
  // {
  //     "location": {
  //         "location_code": "DEGCI",
  //         "location_name": "GEMMERICH",
  //         "country_code": "DE",
  //         "state_code": "",
  //         "gmt_hours": 120,
  //         "continent_code": "E",
  //         "region_code": "DEU",
  //         "delete_flag": "N",
  //     }
  // }
  // ...
  rpc GetLocationsByCodes(GetLocationsByCodesRequest) returns (stream GetLocationsByCodesResponse);

  // Search list of locations by name.
  //
  // Operation: LIKE
  //
  // Request:
  // {
  //     "location_name": "GEM"
  // }
  //
  // Response:
  // {
  //     "location": {
  //         "location_code": "DEGCI",
  //         "location_name": "GEMMERICH",
  //         "country_code": "DE",
  //         "state_code": "",
  //         "gmt_hours": 120,
  //         "continent_code": "E",
  //         "region_code": "DEU",
  //         "delete_flag": "N",
  //     }
  // }
  // ...
  rpc SearchLocationsByName(SearchLocationsByNameRequest) returns (stream SearchLocationsByNameResponse);

  // Search list of locations by multiple fields.
  //
  // Operation: LIKE & MATCH
  //
  // Request:
  // {
  //     "location_code" : "DEGCI",
  //     "location_name" : "",
  //     "scc_code_data": {
  //         "scc_code_list":[
  //             {"scc_code": "GEMMERICH"},
  //             {"scc_code": "DESKO"}
  //         ]
  //     },
  //     "sales_office_code" : "",
  //     "finance_control_office_code" : "",
  //     "equipment_control_office_code" : "",
  //     "un_location_indicator_code" : "",
  //     "state_code" : "",
  //     "country_code" : "",
  //     "delt_flg": "N",
  //     "call_port_flag": "N",
  //     "pagination" : {
  //         offset : 0,
  //         limit : 10,
  //     },
  // }
  //
  // Response:
  // {
  //     "location": {
  //         "location_code": "CLCHO",
  //         "location_name": "CHONCHI",
  //         "region_code": "CHL",
  //         "state_code": "LL",
  //         "un_location_indicator_code": "GEMMERICH",
  //         "scc_code": "CLLQN",
  //         "sales_office_code": "SCLBB",
  //         "equipment_control_office_code": "GEMMERICH",
  //         "finance_control_office_code": "SCLBB",
  //         "country_code": "CL",
  //         "un_location_code": "CLCHO",
  //         "hub_location_code": 120,
  //         "ecc_code": "CLLQN",
  //         "lcc_code": "CLSCL",
  //         "rcc_code": "CLSCL",
  //         "row_index": 0,
  //         "total_row_count": 12,
  //     }
  // }
  // ...
  rpc SearchLocationsByMultipleFields(SearchLocationsByMultipleFieldsRequest) returns (stream SearchLocationsByMultipleFieldsResponse);
}
