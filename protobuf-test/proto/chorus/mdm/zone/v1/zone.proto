syntax = "proto3";

package chorus.mdm.zone.v1;

import "chorus/mdm/base/v1/base.proto";

// The zone information.
message Zone {
  // The zone_code is the code of the zone. zn_cd in OPUS.
  string zone_code = 1;
  // The zone_name is the name of the zone. zn_nm in OPUS.
  string zone_name = 2;
  // The location_code is the location code of the zone. loc_cd in OPUS.
  string location_code = 3;
}

// The zone code information.
message ZoneCode {
  // The code of the zone.
  string zone_code = 1;
}

// Request message for `ZoneInfoService.GetZonesByCodes`.
message GetZonesByCodesRequest {
  // The zone code list.
  repeated ZoneCode zone_code_list = 1;
}

// Response message for `ZoneInfoService.GetZonesByCodes`.
message GetZonesByCodesResponse {
  // The zone information.
  Zone zone = 1;
}

// Request message for `ZoneInfoService.SearchZonesByName`.
message SearchZonesByNameRequest {
  // The name of the zone.
  string zone_name = 1;
}

// Response message for `ZoneInfoService.SearchZonesByName`.
message SearchZonesByNameResponse {
  // The zone information.
  Zone zone = 1;
}

// Request message for `ZoneInfoService.SearchZoneByMultipleFields`.
message SearchZoneByMultipleFieldsRequest {
  // The code of the zone.
  optional string zone_code = 1;
  //The name of the zone.
  optional string zone_name = 2;
  // The location code of the zone.
  optional string location_code = 3;
  //Pagination
  chorus.mdm.base.v1.Pagination pagination = 5;
  // The order by list
  repeated chorus.mdm.base.v1.OrderBy order_by = 6;
  // The list of location code
  repeated string location_codes = 7;
}

//Wrap Zone entity from search multiple
message ZoneSearchPopup {
  //The sequence of yard.
  int32 sequence = 1;
  // The zone_code is the code of the zone. zn_cd in OPUS.
  string zone_code = 2;
  // The zone_name is the name of the zone. zn_nm in OPUS.
  string zone_name = 3;
  // LOC_CD in OPUS.
  string loc_cd = 4;
  // REP_YD_CD in OPUS;
  string rep_yd_cd = 5;
}

// Response message for `ZoneInfoService.SearchZoneByMultipleFields`.
message SearchZoneByMultipleFieldsResponse {
  //The sequence of yard.
 ZoneSearchPopup zone = 1;
}

// Services for zone.
service ZoneInfoService {
  // Get list of zones by codes.
  //
  // Operation: MATCH
  //
  // Request:
  // {
  //     "zone_code_list": [
  //         {
  //             "zone_code": "AULELZ1"
  //         }
  //     ]
  // }
  //
  // Response:
  // {
  //     "zone": {
  //         "zone_code": "AULELZ1",
  //         "zone_name": "LAKE EVELLA, NT",
  //         "location_code": "AULEL"
  //     }
  // }
  rpc GetZonesByCodes(GetZonesByCodesRequest) returns (stream GetZonesByCodesResponse);

  // Search list of zones by name.
  //
  // Operation: LIKE
  //
  // Request:
  // {
  //     "zone_name": "LAKE E"
  // }
  //
  // Response:
  // {
  //     "zone": {
  //         "zone_code": "CALKRZ1",
  //         "zone_name": "LAKE ERROCK, BC",
  //         "location_code": "CALKR"
  //     }
  // }
  // ...
  rpc SearchZonesByName(SearchZonesByNameRequest) returns (stream SearchZonesByNameResponse);

    // Search list of yard by multiple fields.
  //
  // Operation: LIKE & MATCH
  //
  // Request:
  // {      
  //  "zone_code": "AULELZ1",
  //  "zone_name": "LAKE EVELLA, NT",
  //  "location_code": "AULEL",
  //  "pagination": {
  //      "limit": 50,
  //      "offset": 0,
  //    },
  // }
  //
  // Response:
  // {
  //     "zone": {
  //          "sequence": 1,
  //          "zone_code": "AULELZ1",
  //          "zone_name": "LAKE EVELLA, NT"",
  //          "rep_yd_cd": null,
  //          "loc_cd": "AULEL"
  //     }
  // }
  rpc SearchZoneByMultipleFields(SearchZoneByMultipleFieldsRequest) returns (stream SearchZoneByMultipleFieldsResponse);
}
