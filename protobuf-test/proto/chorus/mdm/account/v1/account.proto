syntax = "proto3";

package chorus.mdm.account.v1;

// The account information.
message Account {
  // The account_code is the code of the account. acct_cd in OPUS.
  string account_code = 1;
  // The account_english_name is the english name of the account. acct_eng_cd in OPUS.
  string account_english_name = 2;
}

// The account code information.
message AccountCode {
  // The code of the account.
  string account_code = 1;
}

// Request message for `AccountInfoService.GetAccountsByCodes`.
message GetAccountsByCodesRequest {
  // The account code list.
  repeated AccountCode account_code_list = 1;
}

// Request message for `AccountInfoService.SearchAccountsByName`.
message SearchAccountsByNameRequest {
  // The account name.
  string account_english_name = 1;
}

// Response message for `AccountInfoService.GetAccountsByCodes`.
message GetAccountsByCodesResponse {
  // The account information.
  Account account = 1;
}

// Response message for `AccountInfoService.SearchAccountsByName`.
message SearchAccountsByNameResponse {
  // The account information.
  Account account = 1;
}

// Services for account.
service AccountInfoService {
  // Get list of accounts by codes.
  //
  // Operation: MATCH
  //
  // Request:
  // {
  //     "account_code_list": [
  //         {
  //             "account_code": "11501021"
  //         }
  //     ]
  // }
  //
  // Response:
  // {
  //     "account": {
  //         "account_code": "11501021",
  //         "account_english_name": "PREPAYMENTS-EXPENSE FOR CANAL TRANSIT FOR ACCRUAL"
  //     }
  // }
  // ...
  rpc GetAccountsByCodes(GetAccountsByCodesRequest) returns (stream GetAccountsByCodesResponse);

  // Search list of accounts by names.
  //
  // Operation: LIKE
  //
  // Request:
  // {
  //     "account_english_name": "PAY"
  // }
  //
  // Response:
  // {
  //     "account": {
  //         "account_code": "11501021",
  //         "account_english_name": "PREPAYMENTS-EXPENSE FOR CANAL TRANSIT FOR ACCRUAL"
  //     }
  // }
  // ...
  rpc SearchAccountsByName(SearchAccountsByNameRequest) returns (stream SearchAccountsByNameResponse);
}
